# Project Name
PROJECT = NeutronCode

# Compiler
CC     = gcc

# Compiler options during compilation
CFLAGS = -Wall
DEBUG  = -g

# dependency options
DEPENDENCY_OPTIONS = -MM

# Header include directries
IDIR   = ../include						\
		 ../include/EnergySpectra	  	\
		 ../include/NeutronProduction 	\
		 ../include/ParticleFlux	  

#DIRS   = 	src							\
#			src/EnergySpectra			\
#			src/NeutronProduction		\
#			src/ParticleFlux

ODIR   = obj
LIBS   = -lm

_DEPS  = constands.h 
DEPS   = $(patsubst %,$(IDIR)/%,_DEPS))

_OBS   =  main.o \
		constands.o

$(ODIR)/%.o: %.c $(DEPS)
		$(CC) -c -o $@ $< $(CFLAGS)
		
#NeutronCode: $(OBJ)
#		gcc -o $@ $^ $(CFLAGS) 

#-- Do not edit below this line --

# Subdirs to search for additional source files
SUBDIRS := $(shell ls -F | grep "\/" )
DIRS := ./ $(SUBDIRS)
SOURCE_FILES := $(foreach d, $(DIRS), $(wildcard $(d)*.c) )
HEADER_FILES := $(foreach d, $(DIRS), $(wildcard $(d)*.h) )

# Create an object file of every c file
OBJECTS = $(patsubst %.c, %.o, $(SOURCE_FILES))

# Dependencies
DEPENDENCIES = $(patsubst %.c, %.d, $(HEADER_FILES))

# Create .d files
%.d: %.c
	$(CC) $(DEPENDENCY_OPTIONS) $< -MT "$*.o $*.d" -MF $*.d

# Make $(PROJECT) the default target
all: $(DEPENDENCIES) $(PROJECT)

$(PROJECT): $(OBJECTS)
	$(CC) -o $(PROJECT) $(OBJECTS) $(LIBS)

# Include dependencies (if there are any)
ifneq "$(strip $(DEPENDENCIES))" ""
	include $(DEPENDENCIES)
endif

# Compile every c file to an object
%.o: %.c
	$(CC) -c $(COMPILE_OPTIONS) -o $@ $< $(HEADERS)


.PHONY: clean

clean: 
		rm -f $(ODIR)/*.o *~ core $(INCDIR)/*~